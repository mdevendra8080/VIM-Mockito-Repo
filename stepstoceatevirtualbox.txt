Docker :

1] Connect git bash

2] in user foldr -->  VMs
		--> boxes (vagrant to create an VM)   http://www.vagrantbox.es/
		vagrant :  https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-vagrant.box
		
	
		-->with-ubuntu-docker connect git bash

		vgrant up
		 
	
------------------------------
demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ vgrant up
bash: vgrant: command not found

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ cd ../boxes/

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/boxes
$ ls
xenial-server-cloudimg-amd64-vagrant.box

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/boxes
$ vgrant box list
bash: vgrant: command not found

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/boxes
$ vagrant box list
There are no installed boxes! Use `vagrant box add` to add some.

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/boxes
$ vagrant box add ubuntu-xenial-base xenial-server-cloudimg-amd64-vagrant.box
==> box: Box file was not detected as metadata. Adding it directly...
==> box: Adding box 'ubuntu-xenial-base' (v0) for provider:
    box: Unpacking necessary files from: file://D:/Users/demhatre/VMs/boxes/xeni                                                                                                 al-server-cloudimg-amd64-vagrant.box
    box:
==> box: Successfully added box 'ubuntu-xenial-base' (v0) for 'virtualbox'!

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/boxes
$ vagrant box list
ubuntu-xenial-base (virtualbox, 0)

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/boxes
$ cd ../with-ubuntu-docker/

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ vagrant up
A Vagrant environment or target machine is required to run this
command. Run `vagrant init` to create a new Vagrant environment. Or,
get an ID of a target machine from `vagrant global-status` to run
this command on. A final option is to change to a directory with a
Vagrantfile and to try again.

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ ls
Vagrantfile.txt

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ mv Vagrantfile.txt Vagrantfile

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ cat Vagrantfile
# -*- mode: ruby -*-
# vi: set ft=ruby :

# See README.md for details

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "ubuntu-xenial-base"

  config.vm.define "node" do |node|


    node.vm.hostname = "node1"

    node.vm.network "private_network", ip: "192.168.56.2"

  end

end

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ vagrant up
Bringing machine 'node' up with 'virtualbox' provider...
==> node: Importing base box 'ubuntu-xenial-base'...
==> node: Matching MAC address for NAT networking...
==> node: Setting the name of the VM: with-ubuntu-docker_node_15034843                                                                                                           78181_25713
==> node: Clearing any previously set network interfaces...
==> node: Preparing network interfaces based on configuration...
    node: Adapter 1: nat
    node: Adapter 2: hostonly
==> node: Forwarding ports...
    node: 22 (guest) => 2222 (host) (adapter 1)
==> node: Running 'pre-boot' VM customizations...
==> node: Booting VM...
==> node: Waiting for machine to boot. This may take a few minutes...
    node: SSH address: 127.0.0.1:2222
    node: SSH username: ubuntu
    node: SSH auth method: password
    node: Warning: Remote connection disconnect. Retrying...
    node: Warning: Authentication failure. Retrying...
    node:
    node: Inserting generated public key within guest...
    node: Removing insecure key from the guest if it's present...
    node: Key inserted! Disconnecting and reconnecting using new SSH k                                                                                                           ey...
==> node: Machine booted and ready!
==> node: Checking for guest additions in VM...
    node: The guest additions on this VM do not match the installed ve                                                                                                           rsion of
    node: VirtualBox! In most cases this is fine, but in rare cases it                                                                                                            can
    node: prevent things such as shared folders from working properly.                                                                                                            If you see
    node: shared folder errors, please make sure the guest additions w                                                                                                           ithin the
    node: virtual machine match the version of VirtualBox you have ins                                                                                                           talled on
    node: your host and reload your VM.
    node:
    node: Guest Additions Version: 5.0.40
    node: VirtualBox Version: 5.1
==> node: Setting hostname...
==> node: Configuring and enabling network interfaces...
==> node: Mounting shared folders...
    node: /vagrant => D:/Users/demhatre/VMs/with-ubuntu-docker

demhatre@DINMB628 MINGW64 /d/Users/demhatre/VMs/with-ubuntu-docker
$ vagrant ssh
Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-92-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

0 packages can be updated.
0 updates are security updates.

--- command to reboot the VM using vgrant if not able to connect ssh 
vagrant reload --provision


ubuntu@node1:~$ sudo su
root@node1:/home/ubuntu# docker --version
The program 'docker' is currently not installed. You can install it by typing:
apt install docker.io
root@node1:/home/ubuntu# nano /etc/apt/apt.conf
root@node1:/home/ubuntu# cat /etc/apt/apt.conf
Acquire::http::proxy "http://corp%5cdemhatre:Frontview%4012@inpunwbs02-wcg.corp.capgemini.com:8080";
Acquire::https::proxy "http://corp%5cdemhatre:Frontview%4012@inpunwbs02-wcg.corp.capgemini.com:8080";
root@node1:/home/ubuntu# apt-get update
Hit:1 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:2 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:3 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:4 http://security.ubuntu.com/ubuntu xenial-security/main Sources [88.8 kB]
Get:5 http://archive.ubuntu.com/ubuntu xenial-backports InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial/main Sources [868 kB]
Get:7 http://security.ubuntu.com/ubuntu xenial-security/restricted Sources [2,604 B]
Get:8 http://security.ubuntu.com/ubuntu xenial-security/universe Sources [39.1 kB]
Get:9 http://archive.ubuntu.com/ubuntu xenial/restricted Sources [4,808 B]
Get:10 http://security.ubuntu.com/ubuntu xenial-security/multiverse Sources [1,144 B]
Get:11 http://archive.ubuntu.com/ubuntu xenial/universe Sources [7,728 kB]
Get:12 http://security.ubuntu.com/ubuntu xenial-security/main amd64 Packages [348 kB]
Get:13 http://security.ubuntu.com/ubuntu xenial-security/main Translation-en [152 kB]
Get:14 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 Packages [159 kB]
Get:15 http://security.ubuntu.com/ubuntu xenial-security/universe Translation-en [84.0 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial/multiverse Sources [179 kB]
Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/main Sources [271 kB]
Get:18 http://archive.ubuntu.com/ubuntu xenial-updates/restricted Sources [3,400 B]
Get:19 http://archive.ubuntu.com/ubuntu xenial-updates/universe Sources [169 kB]
Get:20 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse Sources [7,232 B]
Get:21 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [624 kB]
Get:22 http://archive.ubuntu.com/ubuntu xenial-updates/main Translation-en [257 kB]
Get:23 http://archive.ubuntu.com/ubuntu xenial-updates/restricted amd64 Packages [8,040 B]
Get:24 http://archive.ubuntu.com/ubuntu xenial-updates/restricted Translation-en [2,688 B]
Get:25 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [520 kB]
Get:26 http://archive.ubuntu.com/ubuntu xenial-updates/universe Translation-en [206 kB]
Get:27 http://archive.ubuntu.com/ubuntu xenial-backports/main Sources [3,312 B]
Get:28 http://archive.ubuntu.com/ubuntu xenial-backports/universe Sources [4,404 B]
Fetched 12.0 MB in 12s (996 kB/s)
Reading package lists... Done
root@node1:/home/ubuntu# apt-get install -y docker.io
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following additional packages will be installed:
  bridge-utils cgroupfs-mount containerd runc ubuntu-fan
Suggested packages:
  mountall aufs-tools debootstrap docker-doc rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils cgroupfs-mount containerd docker.io runc ubuntu-fan
0 upgraded, 6 newly installed, 0 to remove and 0 not upgraded.
Need to get 16.4 MB of archives.
After this operation, 83.6 MB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu xenial/main amd64 bridge-utils amd64 1.5-9ubuntu1 [28.6 kB]
Get:2 http://archive.ubuntu.com/ubuntu xenial/universe amd64 cgroupfs-mount all 1.2 [4,970 B]
Get:3 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 runc amd64 1.0.0~rc2+docker1.12.6-0ubuntu1~16.04.1 [1,479 kB]
Get:4 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 containerd amd64 0.2.5-0ubuntu1~16.04.1 [4,041 kB]
Get:5 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 docker.io amd64 1.12.6-0ubuntu1~16.04.1 [10.8 MB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 ubuntu-fan all 0.9.2 [30.7 kB]
Fetched 16.4 MB in 6s (2,485 kB/s)
Selecting previously unselected package bridge-utils.
(Reading database ... 53908 files and directories currently installed.)
Preparing to unpack .../bridge-utils_1.5-9ubuntu1_amd64.deb ...
Unpacking bridge-utils (1.5-9ubuntu1) ...
Selecting previously unselected package cgroupfs-mount.
Preparing to unpack .../cgroupfs-mount_1.2_all.deb ...
Unpacking cgroupfs-mount (1.2) ...
Selecting previously unselected package runc.
Preparing to unpack .../runc_1.0.0~rc2+docker1.12.6-0ubuntu1~16.04.1_amd64.deb ...
Unpacking runc (1.0.0~rc2+docker1.12.6-0ubuntu1~16.04.1) ...
Selecting previously unselected package containerd.
Preparing to unpack .../containerd_0.2.5-0ubuntu1~16.04.1_amd64.deb ...
Unpacking containerd (0.2.5-0ubuntu1~16.04.1) ...
Selecting previously unselected package docker.io.
Preparing to unpack .../docker.io_1.12.6-0ubuntu1~16.04.1_amd64.deb ...
Unpacking docker.io (1.12.6-0ubuntu1~16.04.1) ...
Selecting previously unselected package ubuntu-fan.
Preparing to unpack .../ubuntu-fan_0.9.2_all.deb ...
Unpacking ubuntu-fan (0.9.2) ...
Processing triggers for man-db (2.7.5-1) ...
Processing triggers for ureadahead (0.100.0-19) ...
Processing triggers for systemd (229-4ubuntu19) ...
Setting up bridge-utils (1.5-9ubuntu1) ...
Setting up cgroupfs-mount (1.2) ...
Setting up runc (1.0.0~rc2+docker1.12.6-0ubuntu1~16.04.1) ...
Setting up containerd (0.2.5-0ubuntu1~16.04.1) ...
Setting up docker.io (1.12.6-0ubuntu1~16.04.1) ...
Adding group `docker' (GID 117) ...
Done.
Setting up ubuntu-fan (0.9.2) ...
Processing triggers for systemd (229-4ubuntu19) ...
Processing triggers for ureadahead (0.100.0-19) ...
root@node1:/home/ubuntu# docker --version
Docker version 1.12.6, build 78d1802
root@node1:/home/ubuntu#



root@node1:/home/ubuntu# pwd
/home/ubuntu
root@node1:/home/ubuntu# clear
root@node1:/home/ubuntu# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
root@node1:/home/ubuntu# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@node1:/home/ubuntu# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@node1:/home/ubuntu# docker info
Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 0
Server Version: 1.12.6
Storage Driver: aufs
 Root Dir: /var/lib/docker/aufs
 Backing Filesystem: extfs
 Dirs: 0
 Dirperm1 Supported: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: null host bridge overlay
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Security Options: apparmor seccomp
Kernel Version: 4.4.0-92-generic
Operating System: Ubuntu 16.04.3 LTS
OSType: linux
Architecture: x86_64
CPUs: 2
Total Memory: 992.1 MiB
Name: node1
ID: CR5A:5IOG:XCIS:OYMF:ANOT:BZZ2:OFQQ:FQ2G:SWZT:P3OP:ZJML:LXWT
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Registry: https://index.docker.io/v1/
WARNING: No swap limit support
Insecure Registries:
 127.0.0.0/8
root@node1:/home/ubuntu# ipconfig
No command 'ipconfig' found, did you mean:
 Command 'iconfig' from package 'ipmiutil' (universe)
 Command 'ifconfig' from package 'net-tools' (main)
 Command 'iwconfig' from package 'wireless-tools' (main)
ipconfig: command not found
root@node1:/home/ubuntu# ifconfig
docker0   Link encap:Ethernet  HWaddr 02:42:b8:04:d2:d5
          inet addr:172.17.0.1  Bcast:0.0.0.0  Mask:255.255.0.0
          UP BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

enp0s3    Link encap:Ethernet  HWaddr 02:21:85:d0:49:10
          inet addr:10.0.2.15  Bcast:10.0.2.255  Mask:255.255.255.0
          inet6 addr: fe80::21:85ff:fed0:4910/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:38484 errors:0 dropped:0 overruns:0 frame:0
          TX packets:17778 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:30602624 (30.6 MB)  TX bytes:1151035 (1.1 MB)

enp0s8    Link encap:Ethernet  HWaddr 08:00:27:a6:59:bf
          inet addr:192.168.56.2  Bcast:192.168.56.255  Mask:255.255.255.0
          inet6 addr: fe80::a00:27ff:fea6:59bf/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:38 errors:0 dropped:0 overruns:0 frame:0
          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:3814 (3.8 KB)  TX bytes:648 (648.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@node1:/home/ubuntu# docker pull hello-world
Using default tag: latest
latest: Pulling from library/hello-world
b04784fba78d: Pull complete
Digest: sha256:f3b3b28a45160805bb16542c9531888519430e9e6d6ffc09d72261b0d26ff74f
Status: Downloaded newer image for hello-world:latest
root@node1:/home/ubuntu# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
hello-world         latest              1815c82652c0        9 weeks ago         1.84 kB
root@node1:/home/ubuntu# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@node1:/home/ubuntu# docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://cloud.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/

root@node1:/home/ubuntu# docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://cloud.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/

root@node1:/home/ubuntu# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS                          PORTS               NAMES
81654e79a4c8        hello-world         "/hello"            59 seconds ago       Exited (0) 58 seconds ago                           nauseous_shirley
37c4658b64d0        hello-world         "/hello"            About a minute ago   Exited (0) About a minute ago                       dreamy_varahamihira
root@node1:/home/ubuntu# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@node1:/home/ubuntu# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS                          PORTS               NAMES
81654e79a4c8        hello-world         "/hello"            About a minute ago   Exited (0) About a minute ago                       nauseous_shirley
37c4658b64d0        hello-world         "/hello"            About a minute ago   Exited (0) About a minute ago                       dreamy_varahamihira
root@node1:/home/ubuntu# docker pull qlik/gradle
Using default tag: latest
latest: Pulling from qlik/gradle
5040bd298390: Pull complete
fce5728aad85: Pull complete
76610ec20bf5: Pull complete
60170fec2151: Pull complete
e98f73de8f0d: Pull complete
11f7af24ed9c: Pull complete
49e2d6393f32: Pull complete
bb9cdec9c7f3: Pull complete
b1146b7997d7: Pull complete
cdb87720fc70: Pull complete
Digest: sha256:caac07d2308ebde0b4ce449a19d5a9ebac7bc215dd71aeede72b83b368edb127
Status: Downloaded newer image for qlik/gradle:latest
root@node1:/home/ubuntu#


CTL P + Q to come out of it 


root@node1:/home/ubuntu# java -version
The program 'java' can be found in the following packages:
 * default-jre
 * gcj-5-jre-headless
 * openjdk-8-jre-headless
 * gcj-4.8-jre-headless
 * gcj-4.9-jre-headless
 * openjdk-9-jre-headless
Try: apt install <selected package>
root@node1:/home/ubuntu# clear
root@node1:/home/ubuntu# pwd
/home/ubuntu
root@node1:/home/ubuntu# cd /vagrant/
root@node1:/vagrant# pwd
/vagrant
root@node1:/vagrant# ls
ubuntu-xenial-16.04-cloudimg-console.log  Vagrantfile  VIM-Gradle
root@node1:/vagrant# cd VIM-Gradle/
root@node1:/vagrant/VIM-Gradle# docker build -t  dtcc/vim -f Dockerfile
Dockerfile       Dockerfile2      Dockerfile.save
root@node1:/vagrant/VIM-Gradle# docker build -t  dtcc/vim -f Dockerfile2 .
Sending build context to Docker daemon 4.142 MB
Step 1 : FROM qlik/gradle
 ---> 619842a73102
Step 2 : MAINTAINER abhishek ghode
 ---> Running in 6f4f0aef1173
 ---> a4394bd5c61b
Removing intermediate container 6f4f0aef1173
Step 3 : COPY . /var/project
 ---> 3dc3edf831c5
Removing intermediate container be6b400b1a5b
Step 4 : WORKDIR /var/project
 ---> Running in d41bd75a5e9f
 ---> 8d19fb74be29
Removing intermediate container d41bd75a5e9f
Step 5 : VOLUME build /var/project/build
 ---> Running in 9d1180163af2
 ---> 1145319c1958
Removing intermediate container 9d1180163af2
Step 6 : ENTRYPOINT gradle war
 ---> Running in 50e849b446b8
 ---> 3c412a4509a5
Removing intermediate container 50e849b446b8
Successfully built 3c412a4509a5
root@node1:/vagrant/VIM-Gradle# docker run dtcc/vim
:compileJava
Download http://10.109.32.183:8081/nexus/content/groups/public/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.pom
Download http://10.109.32.183:8081/nexus/content/groups/public/net/java/jvnet-parent/1/jvnet-parent-1.pom
Download http://10.109.32.183:8081/nexus/content/groups/public/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar
warning: [options] bootstrap class path not set in conjunction with -source 1.7
1 warning
:processResources
:classes
:war

BUILD SUCCESSFUL

Total time: 8.048 secs

This build could be faster, please consider using the Gradle Daemon: https://docs.gradle.org/2.6/userguide/gradle_daemon.html
root@node1:/vagrant/VIM-Gradle#

root@node1:/vagrant/VIM-Gradle# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
dtcc/vim            latest              81d2228e8715        25 seconds ago      778.6 MB
hello-world         latest              1815c82652c0        9 weeks ago         1.84 kB
qlik/gradle         latest              619842a73102        5 months ago        774.5 MB
root@node1:/vagrant/VIM-Gradle# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS                          PORTS               NAMES
0a652e1f2d4f        dtcc/vim            "gradle war"        28 seconds ago       Exited (0) 22 seconds ago                           amazing_mcclintock
d49464cf5a78        3c412a4509a5        "gradle war"        About a minute ago   Exited (0) About a minute ago                       tender_minsky
3c278121ae38        3c412a4509a5        "gradle war"        4 minutes ago        Exited (0) 4 minutes ago                            evil_hypatia
81654e79a4c8        hello-world         "/hello"            About an hour ago    Exited (0) About an hour ago                        nauseous_shirley
37c4658b64d0        hello-world         "/hello"            About an hour ago    Exited (0) About an hour ago                        dreamy_varahamihira
root@node1:/vagrant/VIM-Gradle# pwd
/vagrant/VIM-Gradle
root@node1:/vagrant/VIM-Gradle# ls
bin  build  build.gradle  Dockerfile  Dockerfile2  Dockerfile.save  gradle  gradlew  gradlew.bat  pom.xml  release  settings.gradle  src  target
root@node1:/vagrant/VIM-Gradle# cd target/
root@node1:/vagrant/VIM-Gradle/target# ls
m2e-wtp
root@node1:/vagrant/VIM-Gradle/target# cd m2e-wtp/
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp# ls
web-resources
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp# cd web-resources/
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp/web-resources# ls
META-INF
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp/web-resources# cd META-INF/
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp/web-resources/META-INF# ls
MANIFEST.MF
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp/web-resources/META-INF# cd ..
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp/web-resources# cd ..
root@node1:/vagrant/VIM-Gradle/target/m2e-wtp# cd ..
root@node1:/vagrant/VIM-Gradle/target# pwd
/vagrant/VIM-Gradle/target
root@node1:/vagrant/VIM-Gradle/target# cd ..
root@node1:/vagrant/VIM-Gradle# ls
bin  build  build.gradle  Dockerfile  Dockerfile2  Dockerfile.save  gradle  gradlew  gradlew.bat  pom.xml  release  settings.gradle  src  target
root@node1:/vagrant/VIM-Gradle# cd build
root@node1:/vagrant/VIM-Gradle/build# ls
classes  libs  reports  resources  test-results  tmp
root@node1:/vagrant/VIM-Gradle/build# cd ..
root@node1:/vagrant/VIM-Gradle# ls
bin  build  build.gradle  Dockerfile  Dockerfile2  Dockerfile.save  gradle  gradlew  gradlew.bat  pom.xml  release  settings.gradle  src  target
root@node1:/vagrant/VIM-Gradle# pwd
/vagrant/VIM-Gradle
root@node1:/vagrant/VIM-Gradle# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
dtcc/vim            latest              81d2228e8715        6 minutes ago       778.6 MB
hello-world         latest              1815c82652c0        9 weeks ago         1.84 kB
qlik/gradle         latest              619842a73102        5 months ago        774.5 MB
root@node1:/vagrant/VIM-Gradle# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                         PORTS               NAMES
0a652e1f2d4f        dtcc/vim            "gradle war"        7 minutes ago       Exited (0) 6 minutes ago                           amazing_mcclintock
d49464cf5a78        3c412a4509a5        "gradle war"        8 minutes ago       Exited (0) 8 minutes ago                           tender_minsky
3c278121ae38        3c412a4509a5        "gradle war"        11 minutes ago      Exited (0) 10 minutes ago                          evil_hypatia
81654e79a4c8        hello-world         "/hello"            About an hour ago   Exited (0) About an hour ago                       nauseous_shirley
37c4658b64d0        hello-world         "/hello"            About an hour ago   Exited (0) About an hour ago                       dreamy_varahamihira
root@node1:/vagrant/VIM-Gradle# ^C
root@node1:/vagrant/VIM-Gradle# docker inspect 0a652e1f2d4f
[
    {
        "Id": "0a652e1f2d4f8715f5b7cb888f76a861cd8c50b7ccaaee5cfcf321fabc186a1b",
        "Created": "2017-08-23T12:14:07.266584637Z",
        "Path": "gradle",
        "Args": [
            "war"
        ],
        "State": {
            "Status": "exited",
            "Running": false,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 0,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2017-08-23T12:14:07.54925412Z",
            "FinishedAt": "2017-08-23T12:14:13.538231934Z"
        },
        "Image": "sha256:81d2228e871559c875c7852e449bfa40748556203b25fbce5de5588ce124b27e",
        "ResolvConfPath": "/var/lib/docker/containers/0a652e1f2d4f8715f5b7cb888f76a861cd8c50b7ccaaee5cfcf321fabc186a1b/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/0a652e1f2d4f8715f5b7cb888f76a861cd8c50b7ccaaee5cfcf321fabc186a1b/hostname",
        "HostsPath": "/var/lib/docker/containers/0a652e1f2d4f8715f5b7cb888f76a861cd8c50b7ccaaee5cfcf321fabc186a1b/hosts",
        "LogPath": "/var/lib/docker/containers/0a652e1f2d4f8715f5b7cb888f76a861cd8c50b7ccaaee5cfcf321fabc186a1b/0a652e1f2d4f8715f5b7cb888f76a861cd8c50b7ccaaee5cfcf321fabc186a1b-json.log",
        "Name": "/amazing_mcclintock",
        "RestartCount": 0,
        "Driver": "aufs",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0
        },
        "GraphDriver": {
            "Name": "aufs",
            "Data": null
        },
        "Mounts": [
            {
                "Name": "a4a64fa6c984f763d0c409c294877b250f7c05c4173df50d61a47704a9ea464b",
                "Source": "/var/lib/docker/volumes/a4a64fa6c984f763d0c409c294877b250f7c05c4173df50d61a47704a9ea464b/_data",
                "Destination": "/var/project/build",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            },
            {
                "Name": "e682a319f3cbb7001afd6d019979511bbad82f586e7e1c010af72730ab9f463b",
                "Source": "/var/lib/docker/volumes/e682a319f3cbb7001afd6d019979511bbad82f586e7e1c010af72730ab9f463b/_data",
                "Destination": "build",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
        "Config": {
            "Hostname": "0a652e1f2d4f",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": true,
            "AttachStderr": true,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/gradle/bin",
                "LANG=C.UTF-8",
                "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64",
                "JAVA_VERSION=8u111",
                "JAVA_DEBIAN_VERSION=8u111-b14-2~bpo8+1",
                "CA_CERTIFICATES_JAVA_VERSION=20140324",
                "GRADLE_HOME=/usr/bin/gradle"
            ],
            "Cmd": null,
            "Image": "dtcc/vim",
            "Volumes": {
                "/var/project/build": {},
                "build": {}
            },
            "WorkingDir": "/var/project",
            "Entrypoint": [
                "gradle",
                "war"
            ],
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "aca753b52b01f2bf6b5a82f5663e77232fa3ffbd9bba50fe09be874ea8b1f25d",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": null,
            "SandboxKey": "/var/run/docker/netns/aca753b52b01",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "",
            "Gateway": "",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "",
            "IPPrefixLen": 0,
            "IPv6Gateway": "",
            "MacAddress": "",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "03cf1ed07478a0b2427b0b4d181163b2dbfcd5c9349c093d2b469e0b332c044b",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": ""
                }
            }
        }
    }
]
root@node1:/vagrant/VIM-Gradle# /var/lib/









		